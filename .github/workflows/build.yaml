name: Build & Publish Electron (on Release)

on:
  release:
    types: [published, prereleased]   # stable from main, prerelease from dev

permissions:
  contents: write

env:
  GH_TOKEN: ${{ github.token }}       # electron-builder reads GH_TOKEN

jobs:
  release:
    continue-on-error: true
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install Dependencies
        run: npm install -g yarn

      - name: Install yarn
        run: yarn install --network-timeout 1000000000

      - name: install-snapcraft
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install -y snapd
          sudo snap install core
          sudo snap install snapcraft --classic

      - name: build-linux
        if: matrix.os == 'ubuntu-latest'
        env:
          SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.STORE_LOGIN }}
          NODE_OPTIONS: "--max_old_space_size=4096"
        run: yarn run build:linux

      - name: build-mac
        if: matrix.os == 'macos-latest'
        env:
          NODE_OPTIONS: "--max_old_space_size=4096"
        run: yarn run build:mac

      - name: build-win
        if: matrix.os == 'windows-latest'
        env:
          NODE_OPTIONS: "--max_old_space_size=4096"
        run: yarn run build:win

